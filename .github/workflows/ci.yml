name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun test

      - name: Check formatting
        run: bun run format:check

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t stream-recorder-test .

      - name: Create test config
        run: cp template_config.json config.json

      - name: Create recordings directory
        run: mkdir -p recordings

      - name: Test container start
        run: |
          docker run -d \
            --name stream-recorder-test \
            -p 3000:3000 \
            -v $(pwd)/recordings:/usr/src/app/recordings \
            -v $(pwd)/config.json:/usr/src/app/config.json \
            stream-recorder-test

          # Wait for container to start
          sleep 10

          # Check if container is running
          if [ "$(docker ps -q -f name=stream-recorder-test)" ]; then
            echo "Container started successfully"
            # Check if app is responding
            if curl -f http://localhost:3000 > /dev/null 2>&1; then
              echo "Application is responding"
            else
              echo "Application is not responding"
              docker logs stream-recorder-test
              exit 1
            fi
          else
            echo "Container failed to start"
            docker logs stream-recorder-test
            exit 1
          fi
